import pygame as pg
from os import path

map_width = 860
map_height = 860
current_map = None


class Map:
    def __init__(self):
        """
        Информация об объектах карты (стены и триггеры) хранится в ввиде двумерного массива, где 1 означает стену,
        а элементы большие 1 хранят в себе индекс триггера, которые они вызывают
        """
        self.spawn_center = (0,0)
        self.map = [
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000",
            "00000000000000000000"
        ]

    # def load_map(name):
    #     background = pg.image.load(path.join(img_dir, name)).convert()
    #     background_rect = background.get_rect()
    #     return (background, background_rect)
    # FIXME: Не работает без инициализации дисплея

    def collision(self, x, y):
        """
        принимает на вход  координаты объекта и возвращает True если объект упирается в стену,
        False - если нет

        :param x: координата объекта по х
        :param y: координата объекта по у
        :return: True or False
        """
        object_square = [round(x * 20 / map_width), round(y * 20 / map_height)]
        if self.map[object_square[1]][object_square[0]] == "1":
            return True
        else:
            return False

    def trigger(self, x, y):
        """

        :param x: координата объекта по х
        :param y: координата объекта по y
        :return: Индекс триггера, если нажат триггер
        """
        object_square = [round(x * 20 / map_width), round(y * 20 / map_height)]
        if int(self.map[object_square[0]][object_square[1]]) > 1:
            return self.map[object_square[1]][object_square[0]]
        else:
            return False



Map1 = Map()
Map1.spawn_center = (60,800)
Map1.map = [
    "11111111100000111111",
    "11111111100000111111",
    "11111111000000111111",
    "00000000000000111111",
    "00000000000000000330",
    "00000000000000000000",
    "00000000000000000000",
    "00000000000000111100",
    "00000010000111111100",
    "00000000000111111100",
    "00000000000111111100",
    "00000000000000020000",
    "00000000000000000000",
    "00000000000000000000",
    "00000000000000000000",
    "00000000000000000000",
    "00000000000000000000",
    "00000001111111111111",
    "00000001111111111111",
    "00000001111111111111"
]

Map2 = Map()
Map2.spawn_center = (430,800)
Map2.map = [
    "11111111111111111111",
    "11111111111111111111",
    "11011010011001011011",
    "10000000000000000001",
    "11000000000000000011",
    "11000000000000000011",
    "10000000000000000001",
    "10000000000000000001",
    "10000000000000000001",
    "10000000000000000001",
    "11000000000000000011",
    "11000000000000000011",
    "10000000000000000001",
    "10000000000000000001",
    "10000000000000000001",
    "10000000000000000001",
    "10000000000000000001",
    "10000000000000000001",
    "11111111111111111111",
    "11111111111111111111"
]

Map3 = Map()
Map3.spawn_center = (60,800)
Map3.map = [
    "00000000000000000000",
    "01111111111111111110",
    "01111111111111111110",
    "01111111111111111110",
    "01110100111111111110",
    "01000000000000111110",
    "01000000000000000010",
    "01000000000000000010",
    "01000000000000000010",
    "01000000000000000010",
    "01111111110000000010",
    "01111111110000000010",
    "01111000000000000010",
    "01000000000000110010",
    "01000000000000111010",
    "01000000000001110010",
    "01000000000000000010",
    "01001100000000000010",
    "01111111111111111110",
    "00000000000000000000"
]

#current_map = Map1

# def change_map(triiger_id):
#     if current_map == Map1:
#         if triiger_id == 2:
#             current_map = Map2
#         if trigger_id == 3:
#             current_map = Map3
#     if current_map ==
